#podcaster skeleton
import feedparser,urllib,time,subprocess,sqlite3,bluetooth,hashlib

class dbFunctions(object):
	def __init__(self):
		self.database="podcasts.db"
	#db functions
	def cursor(self):
		con=sqlite3.connect(self.database)
		dbconections=[con,con.cursor()]
		return dbconections
	
	def transaction(self,execute):
		con=self.cursor()
		a=con[1].execute(execute)
		con[0].commit()
		con[0].close()
	
	def addDevice(self,name,address):
		execute="'INSERT INTO device VALUES (null,?,?,1)'"
		self.transaction(execute)

	def addFeed(self,name,path,url):
		con=self.cursor()
		a=con[1].execute('INSERT INTO feed VALUES (null,?,?,?,"x",1)' , (name,path,url))
		con[0].commit()	
	
	def addEpisode(self,feed,file,episodeUrl):
		con=self.cursor()
		a=con[1].execute('INSERT INTO episode VALUES (null,?,?,1,1,?)' , (feed,file,episodeUrl))
		con[0].commit()	
		
	def toggleActive(self,table,ep_id,active):
		con=self.cursor()
		a=con[0].execute('UPDATE '+table+' SET active=? WHERE id=?' , (active,ep_id))
		con[0].commit()
		con[0].close()

	def get(self,table,idno=0):
		con=self.cursor()
		if idno==0:
			a=con[1].execute('SELECT * FROM '+table)
			return a
		else:
			query=table+" WHERE id = "+str(idno)
			a=con[1].execute('SELECT * FROM '+query)
			return a.fetchone()
		con[0].close()

	def getEpisode(self,name):
		con=self.cursor()
		query="SELECT name FROM episode WHERE name ='"+name+"'"
		a=con[1].execute(query)
		return a.fetchone()
		con[0].close

	def inDb(self,name):
		if self.getEpisode(name):
			print "in db"
			return True
		else:
			print "not in db"
			return False

	def getDownloadList(self):
			downloadList=[]
			con=self.cursor()
			a=con[1].execute('SELECT * FROM episode WHERE download = 1')
			for episode in a:
				feed=self.get('feed',episode[1])
				feedPath=feed[2]+episode[2]
				print feedPath
				downloadList.append([episode[0],episode[5],feedPath])
			return downloadList
			con[0].close



	def getTransferList(self):
		transferList=[]
		episode=[]
		con=self.cursor()
		a=con[1].execute('SELECT id,feed,name FROM episode WHERE transfer = 1')
		
		for episode in a:
			feed=self.get('feed',episode[1])
			transferList.append([episode[0],feed[2]+episode[2]])
		return transferList
		con[0].close

	def setDownloaded(self,ep_id):
		ep_id=str(ep_id)
		con=self.cursor()
		a=con[0].execute('UPDATE episode SET download=0 WHERE id='+ep_id)
		con[0].commit()
		con[0].close()

	def setTransfered(self,ep_id):
		ep_id=str(ep_id)
		con=self.cursor()
		a=con[0].execute('UPDATE episode SET transfer=0 WHERE id='+ep_id)
		con[0].commit()
		con[0].close()
		

		
			






